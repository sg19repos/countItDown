{"version":3,"sources":["sounds/analog-watch-alarm_daniel-simion.mp3","components/firstTimer2.js","components/chipWithDelete.js","styles/snoozeChipsStyles.js","components/checkPoints.js","components/snoozeButton.js","styles/InputFieldStyles.js","styles/snoozeListStyles.js","styles/KeyboardDatePickerStyles.js","components/dateTimePicker.js","components/addNewCheckPoint.js","styles/timerStyle.js","styles/HomeStyles.js","components/mainHeading.js","components/home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","container","display","gridTemplateColumns","gridGap","spacing","paper","padding","textAlign","color","palette","text","secondary","whiteSpace","marginBottom","divider","margin","FirstTimer2","getUpatesfromChild","classes","useState","newTime","setNewTime","finishTime","Date","currentTime","timer","differenceInSeconds","localStorage","setItem","useEffect","id","setInterval","clearInterval","results","push","differenceInDays","differenceInHours","differenceInMinutes","daysRemaining","hoursRemaining","minutesRemaining","timerUnitsArray","timerUnitNameArray","timerMaxValueArray","Grid","map","timerUnit","unitName","unitValue","maxValue","item","sm","xs","lg","Paper","className","style","backgroundImage","number","Math","floor","timerGrid","indexOf","root","justifyContent","flexWrap","OutlinedChips","snoozeTimeText","getElementToDelete","Chip","label","toString","onDelete","window","confirm","variant","icon","SnoozeChipsStyle","styled","div","ul","CheckPoint","snoozeElements","finalArrayElement","key","format","extendedIcon","marginRight","ButtonSizes","triggerClick","Fab","background-color","aria-label","onClick","InputFieldStyles","SnoozeListStyles","KeyboardDatePickerStyles","MaterialUIPickers","handleOnDateChange","React","selectedDate","setSelectedDate","handleDateChange","date","utils","DateFnsUtils","justify","value","onChange","KeyboardButtonProps","snoozeArray","AddNewCheckPoint","getItem","JSON","parse","setSnoozeElements","splice","stringify","e","length","setMinutes","getMinutes","location","reload","handleOnSnoozeClick","TimerStyle","HomeStyles","MainHeading","Home","snoozeList","audioElement","useRef","hidden","src","sound","controls","ref","snoozeElement","current","play","App","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a904d2a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/analog-watch-alarm_daniel-simion.61eb5a40.mp3\";","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    differenceInDays,\r\n    differenceInHours,\r\n    differenceInMinutes,\r\n    differenceInSeconds\r\n} from \"date-fns\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"repeat(12, 1fr)\",\r\n        gridGap: theme.spacing(3)\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(1),\r\n        textAlign: \"center\",\r\n        color: theme.palette.text.secondary,\r\n        whiteSpace: \"nowrap\",\r\n        marginBottom: theme.spacing(1)\r\n    },\r\n    divider: {\r\n        margin: theme.spacing(2, 0)\r\n    }\r\n}));\r\n\r\nfunction FirstTimer2({ getUpatesfromChild }) {\r\n    const classes = useStyles();\r\n    const [newTime, setNewTime] = useState();\r\n    const finishTime = new Date(\"01/01/2020\");\r\n    const currentTime = new Date();\r\n\r\n    const timer = () => {\r\n        setNewTime(differenceInSeconds(finishTime, currentTime) - 1);\r\n        localStorage.setItem(\"currentTime\", currentTime);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const id = setInterval(timer, 1000);\r\n        return () => {\r\n            clearInterval(id);\r\n        };\r\n    }, [newTime]);\r\n\r\n    const results = [];\r\n\r\n    results.push(differenceInDays(finishTime, currentTime));\r\n    results.push(differenceInHours(finishTime, currentTime));\r\n    results.push(differenceInMinutes(finishTime, currentTime));\r\n    results.push(differenceInSeconds(finishTime, currentTime));\r\n\r\n    const daysRemaining = results[3] / (24 * 3600);\r\n    const hoursRemaining = (daysRemaining % 1) * 24;\r\n    const minutesRemaining = (hoursRemaining % 1) * 60;\r\n    const secondsRemaining = (minutesRemaining % 1) * 60;\r\n\r\n    const timerUnitsArray = [\r\n        daysRemaining,\r\n        hoursRemaining,\r\n        minutesRemaining,\r\n        secondsRemaining\r\n    ];\r\n\r\n    const timerUnitNameArray = [\"days\", \"hours\", \"minutes\", \"seconds\"];\r\n    const timerMaxValueArray = [90, 24, 60, 60];\r\n\r\n    const colorPicker = number => {\r\n        if (Math.floor(number) > 70) return \"#339966 \";\r\n        else if (Math.floor(number) > 50 && Math.floor(number) < 71)\r\n            return \"#cccc00 \";\r\n        else if (Math.floor(number) > 25 && Math.floor(number) < 51)\r\n            return \"#ffbb33 \";\r\n        else return \"#ff3333 \";\r\n    };\r\n\r\n    const timerGrid = (unitName, unitValue, maxValue) => {\r\n        return (\r\n            <Grid item sm={3} xs={12} lg={3}>\r\n                <Paper\r\n                    className={classes.paper}\r\n                    style={{\r\n                        backgroundImage:\r\n                            `linear-gradient(to top, ` +\r\n                            colorPicker(\r\n                                (Math.floor(unitValue) / maxValue) * 100\r\n                            ) +\r\n                            (Math.floor(unitValue) / maxValue) * 100 +\r\n                            `%, #f6f6f6 ` +\r\n                            100 +\r\n                            `%, #f6f6f6 100%)`\r\n                    }}\r\n                >\r\n                    <p>{Math.floor(unitValue)}</p>\r\n                    <h5>{unitName}</h5>\r\n                </Paper>\r\n            </Grid>\r\n        );\r\n    };\r\n\r\n    return (\r\n        getUpatesfromChild(currentTime),\r\n        (\r\n            <div>\r\n                <Grid container spacing={3}>\r\n                    {timerUnitsArray.map(timerUnit =>\r\n                        timerGrid(\r\n                            timerUnitNameArray[\r\n                                timerUnitsArray.indexOf(timerUnit)\r\n                            ],\r\n                            timerUnit,\r\n                            timerMaxValueArray[\r\n                                timerUnitsArray.indexOf(timerUnit)\r\n                            ]\r\n                        )\r\n                    )}\r\n                </Grid>\r\n            </div>\r\n        )\r\n    );\r\n}\r\n\r\nexport default FirstTimer2;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport AccessAlarmIcon from \"@material-ui/icons/AccessAlarm\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexWrap: \"wrap\",\r\n        \"& > *\": {\r\n            margin: theme.spacing(0.5)\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function OutlinedChips(snoozeTimeText, id, getElementToDelete) {\r\n    const classes = useStyles();\r\n\r\n    const handleDelete = () => {\r\n        let result = window.confirm(\"Sure you want to delete?\");\r\n        if (result) {\r\n            getElementToDelete(id);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Chip\r\n                sm={3}\r\n                xs={3}\r\n                lg={4}\r\n                label={snoozeTimeText.toString()}\r\n                onDelete={() => handleDelete(id)}\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                icon={<AccessAlarmIcon />}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const SnoozeChipsStyle = styled.div`\r\n    @media (max-width: 400px) {\r\n        width: 50%;\r\n        margin: 1% 0% auto 40%;\r\n    }\r\n    background-color: transparent;\r\n    // border: 1px solid #ddd;\r\n    color: currentColor;\r\n    cursor: pointer;\r\n\r\n    padding: 0;\r\n    width: 25%;\r\n    margin: 1% 0% auto 4%;\r\n    text-align: center;\r\n    float: left;\r\n\r\n    &:focus {\r\n        outline: 0;\r\n    }\r\n`;\r\n\r\nexport const Ul = styled.ul`\r\n    width: 100%;\r\n    padding-left: 0%;\r\n    text-align: center;\r\n    margin: auto;\r\n    .MuiGrid-grid-md-8 {\r\n        margin: auto !important;\r\n    }\r\n`;\r\n\r\n// export default SnoozeChipsStyle;\r\n","import React, { useState } from \"react\";\r\nimport { format } from \"date-fns\";\r\n// import InteractiveList from \"./listWithDelete\";\r\nimport OutlinedChips from \"./chipWithDelete\";\r\nimport { SnoozeChipsStyle, Ul } from \"../styles/snoozeChipsStyles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nfunction CheckPoint({ snoozeElements, finalArrayElement, getElementToDelete }) {\r\n    return (\r\n        <SnoozeChipsStyle>\r\n            <Grid\r\n                sm={3}\r\n                xs={12}\r\n                lg={4}\r\n                container\r\n                spacing={3}\r\n                key={snoozeElements.indexOf(finalArrayElement)}\r\n                id={snoozeElements.indexOf(finalArrayElement)}\r\n            >\r\n                <Grid item xs={6} sm={3}>\r\n                    {/* <Paper className={classes.paper}>xs=12</Paper> */}\r\n                    {OutlinedChips(\r\n                        format(new Date(finalArrayElement), \"dd-MMMM-yyyy p\"),\r\n                        snoozeElements.indexOf(finalArrayElement),\r\n                        getElementToDelete\r\n                    )}\r\n                </Grid>\r\n            </Grid>\r\n        </SnoozeChipsStyle>\r\n    );\r\n}\r\n\r\nexport default CheckPoint;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    margin: {\r\n        margin: theme.spacing(1)\r\n    },\r\n    extendedIcon: {\r\n        marginRight: theme.spacing(1)\r\n    }\r\n}));\r\n\r\nexport default function ButtonSizes(triggerClick) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Fab\r\n                    color=\"default\"\r\n                    background-color=\"default\"\r\n                    aria-label=\"add\"\r\n                    className={classes.margin}\r\n                    onClick={triggerClick.triggerClick}\r\n                >\r\n                    <AddIcon />\r\n                </Fab>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nconst InputFieldStyles = styled.div`\r\n    width: 50%;\r\n    margin: 2% auto;\r\n`;\r\n\r\nexport default InputFieldStyles;\r\n","import styled from \"styled-components\";\r\n\r\nconst SnoozeListStyles = styled.div`\r\n    @media (max-width: 400px) {\r\n        margin: auto;\r\n    }\r\n    height: auto;\r\n    width: auto;\r\n    margin: 1% 2% auto 5%;\r\n    text-align: center;\r\n`;\r\n\r\nexport default SnoozeListStyles;\r\n","import styled from \"styled-components\";\r\n\r\nconst KeyboardDatePickerStyles = styled.div`\r\n    font-family: Quicksand;\r\n`;\r\n\r\nexport default KeyboardDatePickerStyles;\r\n","import \"date-fns\";\r\nimport React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker\r\n} from \"@material-ui/pickers\";\r\nimport KeyboardDatePickerStyles from \"../styles/KeyboardDatePickerStyles\";\r\n\r\nexport default function MaterialUIPickers({ handleOnDateChange }) {\r\n    // The first commit of Material-UI\r\n    const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n\r\n    const handleDateChange = date => {\r\n        setSelectedDate(date);\r\n        handleOnDateChange(date);\r\n    };\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid container justify=\"space-around\">\r\n                <KeyboardDatePickerStyles>\r\n                    <KeyboardDatePicker\r\n                        margin=\"normal\"\r\n                        id=\"date-picker-dialog\"\r\n                        label=\"Date picker dialog\"\r\n                        format=\"MM/dd/yyyy\"\r\n                        value={selectedDate}\r\n                        onChange={handleDateChange}\r\n                        KeyboardButtonProps={{\r\n                            \"aria-label\": \"change date\"\r\n                        }}\r\n                    />\r\n                </KeyboardDatePickerStyles>\r\n                <KeyboardTimePicker\r\n                    margin=\"normal\"\r\n                    id=\"time-picker\"\r\n                    label=\"Time picker\"\r\n                    value={selectedDate}\r\n                    onChange={handleDateChange}\r\n                    KeyboardButtonProps={{\r\n                        \"aria-label\": \"change time\"\r\n                    }}\r\n                />\r\n            </Grid>\r\n        </MuiPickersUtilsProvider>\r\n    );\r\n}\r\n","import React, { useState, Fragment } from \"react\";\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport CheckPoint from \"./checkPoints\";\r\n\r\nimport ButtonSizes from \"./snoozeButton\";\r\nimport InputFieldStyles from \"../styles/InputFieldStyles\";\r\nimport SnoozeListStyles from \"../styles/snoozeListStyles\";\r\n\r\n// import SnoozeInputFields from \"./snoozeInputField\";\r\nimport MaterialUIPickers from \"./dateTimePicker\";\r\n\r\nconst snoozeArray = [];\r\nfunction AddNewCheckPoint() {\r\n    const [newTime, setNewTime] = useState(\"\");\r\n    const [snoozeElements, setSnoozeElements] = useState(\r\n        localStorage.getItem(\"SnoozeArray\")\r\n            ? JSON.parse(localStorage.getItem(\"SnoozeArray\")).snoozeArray\r\n            : []\r\n    );\r\n\r\n    const handleOnSnoozeClick = () => {\r\n        if (\r\n            localStorage.getItem(\"SnoozeArray\") &&\r\n            JSON.parse(localStorage.getItem(\"SnoozeArray\")).snoozeArray.length >\r\n                0\r\n        ) {\r\n            let snoozeArray = JSON.parse(localStorage.getItem(\"SnoozeArray\"))\r\n                .snoozeArray;\r\n            if (newTime == \"\") {\r\n                snoozeArray.push(\r\n                    new Date().setMinutes(new Date().getMinutes() + 1)\r\n                );\r\n            } else {\r\n                snoozeArray.push(newTime);\r\n            }\r\n            localStorage.setItem(\r\n                \"SnoozeArray\",\r\n                JSON.stringify({ snoozeArray: snoozeArray })\r\n            );\r\n        } else {\r\n            let snoozeArray = [];\r\n            snoozeArray.push(\r\n                new Date().setMinutes(new Date().getMinutes() + 1)\r\n            );\r\n            localStorage.setItem(\r\n                \"SnoozeArray\",\r\n                JSON.stringify({ snoozeArray: snoozeArray })\r\n            );\r\n        }\r\n        setNewTime(snoozeArray);\r\n        setSnoozeElements(\r\n            JSON.parse(localStorage.getItem(\"SnoozeArray\")).snoozeArray\r\n        );\r\n        window.location.reload();\r\n    };\r\n\r\n    const handleOnDateChange = e => {\r\n        setNewTime(e);\r\n    };\r\n\r\n    const AddNewBtn = () => {\r\n        return (\r\n            <ButtonSizes\r\n                triggerClick={() => {\r\n                    handleOnSnoozeClick();\r\n                }}\r\n            />\r\n        );\r\n    };\r\n\r\n    const getElementToDelete = id => {\r\n        let snoozeArray = JSON.parse(localStorage.getItem(\"SnoozeArray\"))\r\n            .snoozeArray;\r\n\r\n        snoozeArray.splice(id, 1);\r\n\r\n        localStorage.setItem(\r\n            \"SnoozeArray\",\r\n            JSON.stringify({\r\n                snoozeArray: snoozeArray\r\n            })\r\n        );\r\n        setSnoozeElements(\r\n            JSON.parse(localStorage.getItem(\"SnoozeArray\")).snoozeArray\r\n        );\r\n    };\r\n\r\n    const SnoozeList = () => {\r\n        return snoozeElements\r\n            ? snoozeElements.map(finalArrayElement => {\r\n                  return (\r\n                      <CheckPoint\r\n                          key={snoozeElements.indexOf(finalArrayElement)}\r\n                          snoozeElements={snoozeElements}\r\n                          finalArrayElement={finalArrayElement}\r\n                          getElementToDelete={getElementToDelete}\r\n                      />\r\n                  );\r\n              })\r\n            : null;\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <InputFieldStyles>\r\n                <MaterialUIPickers handleOnDateChange={handleOnDateChange} />\r\n            </InputFieldStyles>\r\n            <AddNewBtn />\r\n            <SnoozeListStyles>\r\n                <SnoozeList />\r\n            </SnoozeListStyles>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default AddNewCheckPoint;\r\n","import styled from \"styled-components\";\r\n\r\nconst TimerStyle = styled.div`\r\n    font-weight: bolder;\r\n    font-size: 45px;\r\n`;\r\n\r\nexport default TimerStyle;\r\n","import styled from \"styled-components\";\r\n\r\nconst HomeStyles = styled.div`\r\n    padding: 2%;\r\n    > .main-heading {\r\n        font-size: 30px;\r\n        font-family: Monoton;\r\n    }\r\n`;\r\n\r\nexport default HomeStyles;\r\n","import React from \"react\";\r\nimport HourglassFullTwoToneIcon from \"@material-ui/icons/HourglassFullTwoTone\";\r\n\r\nconst MainHeading = () => {\r\n    return (\r\n        <div className=\"main-heading\">\r\n            <h3>\r\n                Count It Down <HourglassFullTwoToneIcon />\r\n            </h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainHeading;\r\n","import React, { Fragment, useRef } from \"react\";\r\nimport FirstTimer2 from \"./firstTimer2\";\r\nimport AddNewCheckPoint from \"./addNewCheckPoint\";\r\nimport sound from \"../sounds/analog-watch-alarm_daniel-simion.mp3\";\r\nimport TimerStyle from \"../styles/timerStyle\";\r\nimport HomeStyles from \"../styles/HomeStyles\";\r\nimport MainHeading from \"./mainHeading\";\r\n\r\nfunction Home() {\r\n    const snoozeList = localStorage.getItem(\"SnoozeArray\");\r\n    const audioElement = useRef(null);\r\n    const getUpatesfromChild = currentTime => {\r\n        if (snoozeList != null) {\r\n            JSON.parse(snoozeList).snoozeArray.map(snoozeElement => {\r\n                if (\r\n                    new Date(snoozeElement).toString() == new Date().toString()\r\n                ) {\r\n                    audioElement.current.play();\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <HomeStyles>\r\n                <MainHeading />\r\n                <audio hidden src={sound} controls ref={audioElement}></audio>\r\n                <TimerStyle>\r\n                    <FirstTimer2 getUpatesfromChild={getUpatesfromChild} />\r\n                </TimerStyle>\r\n                <AddNewCheckPoint />\r\n            </HomeStyles>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Home from \"./components/home\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Home />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}